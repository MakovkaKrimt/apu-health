networks:
  apu-network:
    external: true
  dipp_network:
    external: true

services:
  apu-db:
    image: kartoza/postgis:${POSTGIS_VERSION_TAG}
    container_name: apu-db
    volumes:
      - apu-db-data:/var/lib/postgresql
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASS}
      # - ALLOW_IP_RANGE=${ALLOW_IP_RANGE}
      # - FORCE_SSL=TRUE
    restart: on-failure
    healthcheck:
      test: "PGPASSWORD=${POSTGRES_PASS} pg_isready -h 127.0.0.1 -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 1m
    networks:
      - apu-network
      - dipp_network

  apu-api:
    container_name: apu-api
    build:
      context: ./backend/api
      dockerfile: Dockerfile.prod
    env_file:
      - ./backend/api/.env.production
    ports:
      - "5001:5000"
    networks:
      - apu-network
    depends_on:
      apu-db:
        condition: service_healthy

  apu-pptx-generator:
    container_name: apu-py
    build:
      context: ./backend/pptx-generator
      dockerfile: Dockerfile.prod
    ports:
      - "8002:8000"
    volumes:
      - ./backend/pptx-generator/app:/app/app
    environment:
      - WORKERS=${WORKERS:-2}
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers ${WORKERS:-2}
    networks:
      - apu-network
